name: skibidinews

x-common-env: &common_env
    OPENAI_API_KEY: "${OPENAI_API_KEY:-}"

services:
    mcp_router_agent:
        build:
            context: ./router_agent
            dockerfile: Dockerfile
        environment:
            <<: *common_env
        depends_on:
            - mcp_prompt_opt
            - mcp_text_to_video
            - mcp_humorizer
            - mcp_news_aggr
        volumes:
            - ./synthesized_speech:/app/synthesized_speech
        networks:
            - appnet

    mcp_humorizer:
        build:
            context: ./mcp_humorizer
            dockerfile: Dockerfile
        environment:
            <<: *common_env
            MODEL_PROVIDER: ${MODEL_PROVIDER}
            HUMOR_STYLE: ${HUMOR_STYLE}
            HTTP_TIMEOUT: ${HTTP_TIMEOUT}
            MAX_OUTPUT_TOKENS: ${MAX_OUTPUT_TOKENS}
            TEMPERATURE: ${TEMPERATURE}

        networks:
            - appnet
        #restart: unless-stopped

    mcp_news_aggr:
        build:
            context: ./mcp_news_aggr
            dockerfile: Dockerfile
        environment:
            <<: *common_env
        networks:
            - appnet
        restart: unless-stopped

    mcp_prompt_opt:
        build:
            context: ./mcp_prompt_opt
            dockerfile: Dockerfile
        #environment:
        #<<: *common_env
        networks:
            - appnet
        restart: unless-stopped

    mcp_text_to_video:
        build:
            context: ./mcp_text_to_video
            dockerfile: Dockerfile
        environment:
            <<: *common_env
            AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
            AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
            AWS_REGION: ${AWS_REGION}

        networks:
            - appnet
        restart: unless-stopped

networks:
    appnet:
        driver: bridge
